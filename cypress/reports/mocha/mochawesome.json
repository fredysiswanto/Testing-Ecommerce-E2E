{
  "stats": {
    "suites": 5,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-26T17:15:15.592Z",
    "end": "2022-03-26T17:15:25.023Z",
    "duration": 9431,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e340c1d6-a2a9-4be2-911a-acfdc9d5d88d",
      "title": "",
      "fullFile": "cypress/integration/api/api.spec.js",
      "file": "cypress/integration/api/api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f54f85c0-5c1b-4b8f-a727-51db5dfa8061",
          "title": "Demo My Skill",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fbb90d38-c013-4803-b215-e7277aab14cb",
              "title": "[User] Operations about user",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creat user",
                  "fullTitle": "Demo My Skill [User] Operations about user creat user",
                  "timedOut": null,
                  "duration": 1760,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('POST', `${url}/user`, {\n  id: 7777777777778057,\n  username: 'testerFredy',\n  firstName: 'Tester',\n  lastName: 'Fredy',\n  email: 'tester@fredy.com',\n  password: 'batam123',\n  phone: '0811111',\n  userStatus: 0\n}).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.code).to.eql(200);\n  expect(res.body.type).to.eql('unknown');\n  expect(res.body.message).to.not.be.null;\n});",
                  "err": {},
                  "uuid": "2dd3d023-d857-42e6-ac49-c119d314828c",
                  "parentUUID": "fbb90d38-c013-4803-b215-e7277aab14cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get user by user name",
                  "fullTitle": "Demo My Skill [User] Operations about user Get user by user name",
                  "timedOut": null,
                  "duration": 386,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('GET', `${url}/user/${user.username}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.username).to.eql(`${user.username}`);\n  expect(res.body.firstName).to.eql(`${user.firstName}`);\n  expect(res.body.userStatus).to.eql(1);\n});",
                  "err": {},
                  "uuid": "c51115b1-bcfc-4c55-b87a-6165a17e4c3f",
                  "parentUUID": "fbb90d38-c013-4803-b215-e7277aab14cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Login user use id create before",
                  "fullTitle": "Demo My Skill [User] Operations about user Login user use id create before",
                  "timedOut": null,
                  "duration": 424,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('GET', `${url}/user/login?username=${user.username}&password=${user.password}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.include('logged in user session');\n});",
                  "err": {},
                  "uuid": "a5d239c1-fac5-4040-9b94-8222899182a1",
                  "parentUUID": "fbb90d38-c013-4803-b215-e7277aab14cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updated user",
                  "fullTitle": "Demo My Skill [User] Operations about user Updated user",
                  "timedOut": null,
                  "duration": 1067,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('GET', `${url}/user/login?username=${user.username}&password=${user.password}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.include('logged in user session');\n});\ncy.request('PUT', `${url}/user/${user.username}`, {\n  id: 0,\n  username: 'testerFredy',\n  firstName: 'Tester edit',\n  lastName: 'Fredy edit',\n  email: 'tester@fredy.com',\n  password: 'batam123',\n  phone: '0811111',\n  userStatus: 2\n}).should(res => {\n  expect(res.status).to.eql(200); // expect(res.body.username).to.eql(`${user.firstName} edit`);\n  // expect(res.body.firstName).to.eql(`${user.lastName} edit`);\n  // expect(res.body.userStatus).to.not.eql(parseInt(user.userStatus));\n});\ncy.request('GET', `${url}/user/${user.username}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.username).to.eql(`${user.username}`); // expect(res.body.username).to.eql(`${user.firstName} edit`);\n  // expect(res.body.firstName).to.eql(`${user.lastName} edit`);\n  expect(res.body.userStatus).to.eql(parseInt(user.userStatus) + 1);\n});",
                  "err": {},
                  "uuid": "81f38460-d879-49f9-93f1-08826e96aea7",
                  "parentUUID": "fbb90d38-c013-4803-b215-e7277aab14cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dd3d023-d857-42e6-ac49-c119d314828c",
                "c51115b1-bcfc-4c55-b87a-6165a17e4c3f",
                "a5d239c1-fac5-4040-9b94-8222899182a1",
                "81f38460-d879-49f9-93f1-08826e96aea7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3637,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d60c078d-815e-41c7-8b44-232f2617ae36",
              "title": "[Pet] Access to Petstore orders",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "POST - add new pet to store",
                  "fullTitle": "Demo My Skill [Pet] Access to Petstore orders POST - add new pet to store",
                  "timedOut": null,
                  "duration": 453,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('POST', `${url}/pet`, {\n  id: 120,\n  category: {\n    id: 0,\n    name: 'Cat'\n  },\n  name: 'Kucing Oyen',\n  photoUrls: ['string'],\n  tags: [{\n    id: 0,\n    name: 'kucing kampung'\n  }],\n  status: 'available'\n}).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.id).to.eql(120);\n  expect(res.body.name).to.eql(`${pet.name}`);\n  expect(res.body.status).to.eql(`${pet.status}`);\n});",
                  "err": {},
                  "uuid": "2fb31849-6089-4e10-b009-a6c4cbfafbf8",
                  "parentUUID": "d60c078d-815e-41c7-8b44-232f2617ae36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "PUT - update data pet",
                  "fullTitle": "Demo My Skill [Pet] Access to Petstore orders PUT - update data pet",
                  "timedOut": null,
                  "duration": 702,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request('PUT', `${url}/pet`, {\n  id: 120,\n  category: {\n    id: 0,\n    name: 'Cat'\n  },\n  name: 'Kucing Oyen update',\n  photoUrls: ['string'],\n  tags: [{\n    id: 0,\n    name: 'kucing kampung'\n  }],\n  status: 'not available'\n}).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.id).to.eql(120);\n  expect(res.body.name).to.eql(`${pet.name} update`); // expect(res.body.status).to.eql(`${pet.status}`);\n});\ncy.request('GET', `${url}/pet/${pet.id}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.id).to.eql(120);\n  expect(res.body.name).to.eql(`${pet.name} update`);\n});",
                  "err": {},
                  "uuid": "89113c61-50ed-4c01-97f3-77576a680108",
                  "parentUUID": "d60c078d-815e-41c7-8b44-232f2617ae36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fb31849-6089-4e10-b009-a6c4cbfafbf8",
                "89113c61-50ed-4c01-97f3-77576a680108"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
              "title": "CRUD",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add new pet",
                  "fullTitle": "Demo My Skill CRUD Add new pet",
                  "timedOut": null,
                  "duration": 952,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'pet').then(dataPet => {\n  data = dataPet;\n  cy.request('POST', `${url}/pet`, data).should(res => {\n    expect(res.status).to.eql(200);\n    expect(res.body.id).to.eql(data.id);\n    expect(res.body.name).to.eql(`${data.name}`);\n  });\n});",
                  "err": {},
                  "uuid": "8c891d7f-b514-4a03-b447-b22d9e90015f",
                  "parentUUID": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Read data",
                  "fullTitle": "Demo My Skill CRUD Read data",
                  "timedOut": null,
                  "duration": 338,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'pet').then(() => {\n  cy.request('GET', `${url}/pet/${data.id}`).should(res => {\n    expect(res.status).to.eql(200);\n    expect(res.body.id).to.eql(data.id);\n    expect(res.body.name).to.eql(`${data.name}`);\n  });\n});",
                  "err": {},
                  "uuid": "53e391da-0bc2-4625-8786-69b8710e493e",
                  "parentUUID": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update data",
                  "fullTitle": "Demo My Skill CRUD Update data",
                  "timedOut": null,
                  "duration": 378,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'pet').then(() => {\n  cy.request('PUT', `${url}/pet`, {\n    id: 121212,\n    category: {\n      id: 0,\n      name: 'Cat'\n    },\n    name: 'Pussh Cat edit',\n    photoUrls: ['string'],\n    tags: [{\n      id: 0,\n      name: 'Kucing Kampung'\n    }],\n    status: 'sold'\n  }).should(res => {\n    expect(res.status).to.eql(200);\n    expect(res.body.id).to.eql(data.id);\n    expect(res.body.name).to.eql(`${data.name} edit`);\n    expect(res.body.status).to.eql(`sold`);\n  });\n});",
                  "err": {},
                  "uuid": "ab327f82-b2a2-4e7c-9622-309f332bccf3",
                  "parentUUID": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete data",
                  "fullTitle": "Demo My Skill CRUD Delete data",
                  "timedOut": null,
                  "duration": 360,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'pet').then(() => {\n  cy.request('DELETE', `${url}/pet/${data.id}`, {\n    header: {\n      api_key: 'special-key'\n    }\n  }).should(res => {\n    expect(res.status).to.eql(200);\n    expect(res.body.message).to.eql(data.id.toString());\n  });\n});",
                  "err": {},
                  "uuid": "e2771515-4101-4e68-a796-9713b609d084",
                  "parentUUID": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check data",
                  "fullTitle": "Demo My Skill CRUD check data",
                  "timedOut": null,
                  "duration": 362,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'pet').then(() => {\n  cy.request({\n    method: 'GET',\n    url: `${url}/pet/${data.id}`,\n    failOnStatusCode: false,\n    headers: {\n      'api-key': 'special-key'\n    }\n  }).should(res => {\n    expect(res.status).to.eql(404);\n    expect(res.body.message).to.eql('Pet not found');\n  });\n});",
                  "err": {},
                  "uuid": "304880d8-67dc-4f6e-8abe-39430b51724f",
                  "parentUUID": "9ef90fc4-7902-40dc-995f-1c94c8d96881",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c891d7f-b514-4a03-b447-b22d9e90015f",
                "53e391da-0bc2-4625-8786-69b8710e493e",
                "ab327f82-b2a2-4e7c-9622-309f332bccf3",
                "e2771515-4101-4e68-a796-9713b609d084",
                "304880d8-67dc-4f6e-8abe-39430b51724f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2390,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bba566d2-1595-4db5-883a-fa1dce5c2198",
              "title": "Chaining Test",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "user login",
                  "fullTitle": "Demo My Skill Chaining Test user login",
                  "timedOut": null,
                  "duration": 394,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getDataFixture('api', 'list-user').then(data => {\n  const user = data[0];\n  dataBuyer.user = {\n    id: user.id,\n    username: user.username,\n    password: user.password,\n    firstName: user.firstName\n  };\n  cy.login(url, dataBuyer.user.username, dataBuyer.user.password);\n});",
                  "err": {},
                  "uuid": "c98e028b-1602-4921-b5fa-9da76b1ce0f3",
                  "parentUUID": "bba566d2-1595-4db5-883a-fa1dce5c2198",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "user belanja",
                  "fullTitle": "Demo My Skill Chaining Test user belanja",
                  "timedOut": null,
                  "duration": 789,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.log(`user memilih pet id ${idPet}`);\ncy.findPet(url, `${idPet}`);\ncy.createOrder(url, `${idPet}`);",
                  "err": {},
                  "uuid": "0feb51d5-e8f0-43aa-8d5c-c66d641dd5d4",
                  "parentUUID": "bba566d2-1595-4db5-883a-fa1dce5c2198",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "user memiliki pet dari hasil belanja",
                  "fullTitle": "Demo My Skill Chaining Test user memiliki pet dari hasil belanja",
                  "timedOut": null,
                  "duration": 782,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.updatePet(url, `${idPet}`);\ncy.request('GET', `${url}/pet/${idPet}`).should(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.id).to.eql(120);\n  expect(res.body.status).to.eql(`sold`);\n});\ncy.log(`Result Name User : ${dataBuyer.user.firstName}`);\ncy.log(`Have Pet Pet Name : ${dataBuyer.pet.name}`);",
                  "err": {},
                  "uuid": "ef12e6d0-f9ce-45db-9159-f68ccd11b719",
                  "parentUUID": "bba566d2-1595-4db5-883a-fa1dce5c2198",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c98e028b-1602-4921-b5fa-9da76b1ce0f3",
                "0feb51d5-e8f0-43aa-8d5c-c66d641dd5d4",
                "ef12e6d0-f9ce-45db-9159-f68ccd11b719"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1965,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}